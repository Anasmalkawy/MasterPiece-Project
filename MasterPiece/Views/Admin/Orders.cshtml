@model List<MasterPiece.Models.Order>
@{
    ViewData["Title"] = "إدارة الطلبات";
    Layout = "_AdminLayout";
}

<div class="admin-orders">
    <div class="page-header">
        <h1>إدارة الطلبات</h1>
        <div class="order-status-filter">
            <button class="filter-btn active" data-status="all">الكل</button>
            <button class="filter-btn" data-status="pending">قيد الانتظار</button>
            <button class="filter-btn" data-status="shipped">تم الشحن</button>
            <button class="filter-btn" data-status="delivered">تم التسليم</button>
            <button class="filter-btn" data-status="cancelled">ملغي</button>
        </div>
    </div>

    <div class="admin-filters">
        <div class="search-box">
            <input type="text" id="orderSearch" placeholder="بحث عن الطلبات...">
            <i class="fas fa-search"></i>
        </div>
        <div class="date-filter">
            <label>تصفية حسب التاريخ:</label>
            <input type="date" id="startDate" placeholder="من تاريخ">
            <input type="date" id="endDate" placeholder="إلى تاريخ">
            <button id="applyDateFilter" class="filter-apply-btn">تطبيق</button>
            <button id="resetDateFilter" class="filter-reset-btn">إعادة ضبط</button>
        </div>
    </div>

    <div class="admin-table-container">
        @if (Model != null && Model.Any())
        {
            <table class="admin-table orders-table">
                <thead>
                    <tr>
                        <th>رقم الطلب</th>
                        <th>اسم العميل</th>
                        <th>تاريخ الطلب</th>
                        <th>عدد المنتجات</th>
                        <th>المبلغ الإجمالي</th>
                        <th>طريقة الدفع</th>
                        <th>حالة الطلب</th>
                        <th>الإجراءات</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in Model)
                    {
                        var totalAmount = order.Payments.FirstOrDefault()?.Amount ?? 0;
                        var paymentMethod = order.Payments.FirstOrDefault()?.PaymentMethod ?? "غير محدد";
                        var productsCount = order.OrderDetails.Count();

                        <tr data-status="@order.Status.ToLower()" data-order-date="@(order.OrderDate?.ToString("yyyy-MM-dd") ?? "")">
                            <td>#@order.Id</td>
                            <td>@(order.User?.Name ?? "غير معروف")</td>
                            <td>@(order.OrderDate?.ToString("yyyy-MM-dd") ?? "غير محدد")</td>
                            <td>@productsCount</td>
                            <td>$@totalAmount</td>
                            <td>@paymentMethod</td>
                            <td>
                                <span class="status-badge status-@order.Status.ToLower()">@order.Status</span>
                            </td>
                            <td class="actions">
                                <a href="@Url.Action("OrderDetails", "Admin", new { id = order.Id })" class="action-btn view-btn">
                                    <i class="fas fa-eye"></i>
                                </a>
                                <div class="dropdown">
                                    <button type="button" class="action-btn dropdown-btn">
                                        <i class="fas fa-ellipsis-v"></i>
                                    </button>
                                    <div class="dropdown-content">
                                        <form asp-action="UpdateOrderStatus" asp-route-id="@order.Id" method="post">
                                            <input type="hidden" name="status" value="Pending" />
                                            <button type="submit" class="dropdown-item @(order.Status == "Pending" ? "active" : "")">
                                                <i class="fas fa-clock"></i> قيد الانتظار
                                            </button>
                                        </form>
                                        <form asp-action="UpdateOrderStatus" asp-route-id="@order.Id" method="post">
                                            <input type="hidden" name="status" value="Shipped" />
                                            <button type="submit" class="dropdown-item @(order.Status == "Shipped" ? "active" : "")">
                                                <i class="fas fa-truck"></i> تم الشحن
                                            </button>
                                        </form>
                                        <form asp-action="UpdateOrderStatus" asp-route-id="@order.Id" method="post">
                                            <input type="hidden" name="status" value="Delivered" />
                                            <button type="submit" class="dropdown-item @(order.Status == "Delivered" ? "active" : "")">
                                                <i class="fas fa-check-circle"></i> تم التسليم
                                            </button>
                                        </form>
                                        <form asp-action="UpdateOrderStatus" asp-route-id="@order.Id" method="post">
                                            <input type="hidden" name="status" value="Cancelled" />
                                            <button type="submit" class="dropdown-item @(order.Status == "Cancelled" ? "active" : "")">
                                                <i class="fas fa-times-circle"></i> ملغي
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="no-data">
                <i class="fas fa-shopping-cart"></i>
                <p>لا توجد طلبات متاحة</p>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // التأكد من إزالة أي قوائم منسدلة مفتوحة عند تحميل الصفحة
            $(".dropdown-content").removeClass("show");

            // تصفية حسب حالة الطلب
            $(".filter-btn").click(function() {
                $(".filter-btn").removeClass("active");
                $(this).addClass("active");

                var status = $(this).data("status");
                if (status === "all") {
                    $(".orders-table tbody tr").show();
                } else {
                    $(".orders-table tbody tr").hide();
                    $(".orders-table tbody tr[data-status='" + status + "']").show();
                }
            });

            // بحث في الطلبات
            $("#orderSearch").on("keyup", function() {
                var value = $(this).val().toLowerCase();
                $(".orders-table tbody tr").filter(function() {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });

            // تصفية حسب التاريخ
            $("#applyDateFilter").click(function() {
                var startDate = $("#startDate").val();
                var endDate = $("#endDate").val();

                if (startDate && endDate) {
                    $(".orders-table tbody tr").hide();
                    $(".orders-table tbody tr").each(function() {
                        var orderDate = $(this).data("order-date");
                        if (orderDate >= startDate && orderDate <= endDate) {
                            $(this).show();
                        }
                    });

                    // إعادة تطبيق تصفية الحالة إذا كانت نشطة
                    var activeStatus = $(".filter-btn.active").data("status");
                    if (activeStatus !== "all") {
                        var filteredRows = $(".orders-table tbody tr:visible");
                        filteredRows.each(function() {
                            if ($(this).data("status") !== activeStatus) {
                                $(this).hide();
                            }
                        });
                    }
                } else {
                    alert("الرجاء تحديد تاريخ البداية والنهاية");
                }
            });

            // إعادة ضبط تصفية التاريخ
            $("#resetDateFilter").click(function() {
                $("#startDate").val("");
                $("#endDate").val("");
                $(".orders-table tbody tr").show();

                // إعادة تطبيق تصفية الحالة إذا كانت نشطة
                var activeStatus = $(".filter-btn.active").data("status");
                if (activeStatus !== "all") {
                    $(".orders-table tbody tr").hide();
                    $(".orders-table tbody tr[data-status='" + activeStatus + "']").show();
                }
            });

            // عرض وإخفاء القائمة المنسدلة لتغيير الحالة - تم تعديله لحل المشكلة
            $(document).on("click", ".dropdown-btn", function(e) {
                e.preventDefault();
                e.stopPropagation();

                // إغلاق جميع القوائم المنسدلة الأخرى أولاً
                $(".dropdown-content").not($(this).siblings(".dropdown-content")).removeClass("show");

                // تبديل حالة القائمة المنسدلة الحالية
                $(this).siblings(".dropdown-content").toggleClass("show");

                // للتحقق من فتح القائمة - يمكنك إزالة هذا السطر في الإنتاج
                console.log("تم النقر على الزر");
            });

            // منع إغلاق القائمة المنسدلة عند النقر داخلها
            $(document).on("click", ".dropdown-content", function(e) {
                e.stopPropagation();
            });

            // إغلاق جميع القوائم المنسدلة عند النقر في أي مكان آخر في الصفحة
            $(document).on("click", function() {
                $(".dropdown-content").removeClass("show");
            });
        });
    </script>
}